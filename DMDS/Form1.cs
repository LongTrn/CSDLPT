
using DMDS.controller;
using DMDS.model;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Linq;
using System.Threading.Tasks;
using System.Windows.Forms;
using DevExpress.XtraEditors;
using DevExpress.XtraBars;
using System.ComponentModel.DataAnnotations;
using System.Data.SqlClient;
using System.Globalization;

namespace DMDS
{
    public partial class Form1 : DevExpress.XtraBars.Ribbon.RibbonForm
    {
        BindingSource bindingData = new BindingSource();

        public Form1()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill the SqlDataSource asynchronously
            sqlDataSource1.FillAsync();
        }

        private void Form1_Load(object sender, EventArgs e)
        {
            // set enable or disable
            // Accept btn
            simpleButton9.PaintStyle = DevExpress.XtraEditors.Controls.PaintStyles.Light;
            // Cancel btn
            simpleButton10.PaintStyle = DevExpress.XtraEditors.Controls.PaintStyles.Light;
            // Thoát ra btn
            simpleButton4.PaintStyle = DevExpress.XtraEditors.Controls.PaintStyles.Light;
        }

        private void gridControl1_DataSourceChanged(object sender, EventArgs e)
        {
            gridView1.OptionsBehavior.AutoPopulateColumns = false;
            gridView1.PopulateColumns();
            gridView1.BestFitColumns();
            bsiRecordsCount.Caption = "RECORDS : " + gridView1.RowCount;
        }
        /*
        void LoadCategory()
        {
            List<Category> listCategory = CategoryDAO.Instance.GetListCategory();
            cbPhanLoai.DataSource = listCategory;
            cbPhanLoai.DisplayMember = "nameCategory";
        }
         */

        private DataTable LoadDiem ()
        {
            string query = "select * from diem";
            DataTable data = new DataTable();

            using (SqlConnection cn = new SqlConnection(cnstr))
            {
                cn.Open();

                SqlCommand cm = new SqlCommand(query, cn);

                using (SqlDataAdapter adapter = new SqlDataAdapter(cm))
                {
                    adapter.Fill(data);

                }
                cn.Close();
            }

            return data;
            //gridControl1.DataSource = DataProvider.Instance.ExecuteQuery(qr);
        }

        private void enableActionButtonCreateNewForm()
        {
            // Accept btn
            simpleButton9.PaintStyle = DevExpress.XtraEditors.Controls.PaintStyles.Default;
            simpleButton9.Enabled = true;
            // Cancel btn
            simpleButton10.PaintStyle = DevExpress.XtraEditors.Controls.PaintStyles.Default;
            simpleButton10.Enabled = true;
            // Thoát ra btn
            simpleButton4.PaintStyle = DevExpress.XtraEditors.Controls.PaintStyles.Default;
            simpleButton4.Enabled = true;
        }

        private void disableActionButtonCreateNewForm()
        {
            // Accept btn
            simpleButton9.PaintStyle = DevExpress.XtraEditors.Controls.PaintStyles.Light;
            simpleButton9.Enabled = false;
            // Cancel btn
            simpleButton10.PaintStyle = DevExpress.XtraEditors.Controls.PaintStyles.Light;
            simpleButton10.Enabled = false;
            // Thoát ra btn
            simpleButton4.PaintStyle = DevExpress.XtraEditors.Controls.PaintStyles.Light;
            simpleButton4.Enabled = false;
        }

        #region Danh Sach Cac Bang

        private void barButtonItem11_ItemClick(object sender, ItemClickEventArgs e)
        {

            gridControl1.DataSource = kHOABindingSource;
        }

        private void barButtonItem1_ItemClick(object sender, ItemClickEventArgs e)
        {
            // TODO: This line of code loads data into the 'dSVDataSet.GIANGVIEN' table. You can move, or remove it, as needed.
            this.gIANGVIENTableAdapter.Fill(this.dSVDataSet.GIANGVIEN);
            gridControl1.DataSource = gIANGVIENBindingSource;
        }

        private void barButtonItem2_ItemClick(object sender, ItemClickEventArgs e)
        {
            // TODO: This line of code loads data into the 'dSVDataSet.LOP' table. You can move, or remove it, as needed.
            this.lOPTableAdapter.Fill(this.dSVDataSet.LOP);
            gridControl1.DataSource = lOPBindingSource;
        }

        private void barButtonItem3_ItemClick(object sender, ItemClickEventArgs e)
        {
            // TODO: This line of code loads data into the 'dSVDataSet.SINHVIEN' table. You can move, or remove it, as needed.
            this.sINHVIENTableAdapter.Fill(this.dSVDataSet.SINHVIEN);
            gridControl1.DataSource = sINHVIENBindingSource;
        }

        private void barButtonItem4_ItemClick(object sender, ItemClickEventArgs e)
        {
            // TODO: This line of code loads data into the 'dSVDataSet.MONHOC' table. You can move, or remove it, as needed.
            this.mONHOCTableAdapter.Fill(this.dSVDataSet.MONHOC);
            gridControl1.DataSource = mONHOCBindingSource;
        }

        private void barButtonItem5_ItemClick(object sender, ItemClickEventArgs e)
        {
            // TODO: This line of code loads data into the 'dSVDataSet.DIEM' table. You can move, or remove it, as needed.
            this.dIEMTableAdapter.Fill(this.dSVDataSet.DIEM);
            gridControl1.DataSource = dIEMBindingSource;
        }

        #endregion

        #region Bao Cao Cac Bang

        #endregion

        private void barButtonItem6_ItemClick(object sender, ItemClickEventArgs e)
        {

        }

        private void barButtonItem7_ItemClick(object sender, ItemClickEventArgs e)
        {

        }

        private void barButtonItem8_ItemClick(object sender, ItemClickEventArgs e)
        {

        }

        private void barButtonItem9_ItemClick(object sender, ItemClickEventArgs e)
        {

        }

        private void barButtonItem10_ItemClick(object sender, ItemClickEventArgs e)
        {

        }

        private void barButtonItem12_ItemClick(object sender, ItemClickEventArgs e)
        {
        }

        private void bbiNew_ItemClick(object sender, ItemClickEventArgs e)
        {
            gridView1.AddNewRow();
        }

        private void bbiDelete_ItemClick(object sender, ItemClickEventArgs e)
        {
            gridView1.DeleteRow(gridView1.FocusedRowHandle);
        }

        private void bbiEdit_ItemClick(object sender, ItemClickEventArgs e)
        {
            
        }

        private void gridView1_InitNewRow(object sender, DevExpress.XtraGrid.Views.Grid.InitNewRowEventArgs e)
        {
            gridView1.SetRowCellValue(e.RowHandle, "rowguid", Guid.NewGuid());
        }

        private void button3_Click(object sender, EventArgs e)
        {

        }

        private void simpleButton6_Click(object sender, EventArgs e)
        {

        }

        private void simpleButton7_Click(object sender, EventArgs e)
        {
            //List<Monhoc> orderList = MonhocController.Instance.LoadOrderList();
            
            /*
                enableActionButtonCreateNewForm();
                SqlConnection connection = CreateConnectionSQL();
                SqlCommand cmd;
                SqlDataReader data;
                String query, Output = "";
                query = "insert into diem(masv, mamh, lan, diem) value (@masv, @mamh, @lan, @diem)";
                cmd = new SqlCommand(query, connection);
                data = cmd.ExecuteReader();
                while(data.Read())
                {
                    String readData = "";
                    for (int col = 0; col < data.FieldCount; col++)
                    {
                        readData += data.GetValue(col) -
                    }
                    Output += readData + "\n";
                    //Output += data.GetValue(0) + " - " + data.GetValue(1) + "\n";
                }
                MessageBox.Show(Output);
            */
            gridView1.AddNewRow();
            //gridControl1.DataSource = test();
        }

        private void simpleButton8_Click(object sender, EventArgs e)
        {
            gridView1.DeleteRow(gridView1.FocusedRowHandle);
        }
    }
}